# Generated by Django 3.2 on 2021-11-17 05:29

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import listing.utils
import listing.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('v', 'verified'), ('u', 'unverified')], max_length=1)),
                ('suggested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.user')),
            ],
            options={
                'verbose_name_plural': 'Amenities',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('R', 'Rental'), ('S', 'Sell'), ('B', 'Both')], max_length=1)),
                ('phone_number', models.CharField(max_length=15)),
                ('property_id', models.CharField(blank=True, max_length=10, null=True)),
                ('categories', models.CharField(choices=[('L', 'Land'), ('H', 'House'), ('A', 'Apartment'), ('O', 'Office')], max_length=1)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=4000)),
                ('direction', models.CharField(choices=[('E', 'East'), ('S', 'South'), ('W', 'West'), ('N', 'North'), ('NW', 'North West'), ('NE', 'North East'), ('SE', 'South East'), ('SW', 'South West')], max_length=2)),
                ('active', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('built_year', models.PositiveSmallIntegerField()),
                ('cost', models.DecimalField(decimal_places=3, max_digits=10)),
                ('status', models.CharField(choices=[('B', 'SOLD'), ('D', 'DID NOT SELL')], default='D', max_length=1)),
                ('land_area', models.DecimalField(decimal_places=3, max_digits=10)),
                ('road_size', models.DecimalField(decimal_places=3, max_digits=10)),
                ('tole', models.CharField(blank=True, max_length=15, null=True)),
                ('geo_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('video_link', models.CharField(max_length=30)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/listing/', validators=[listing.validators.validate_image])),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.district')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
                ('description', models.CharField(help_text='for example : house,shop,room,apartment', max_length=200)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('v', 'verified'), ('u', 'unverified')], default='u', max_length=1)),
                ('suggested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.user')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=listing.utils.photo_path, validators=[listing.validators.validate_image])),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='listing.listing')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_propertycomment', to='listing.propertycomment', verbose_name='parent comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.AddField(
            model_name='listing',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.propertytype'),
        ),
        migrations.AddField(
            model_name='listing',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user'),
        ),
        migrations.CreateModel(
            name='AmenityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('v', 'verified'), ('u', 'unverified')], default='u', max_length=1)),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amenity', to='listing.amenity')),
                ('property_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.propertytype')),
                ('suggested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.user')),
            ],
        ),
        migrations.CreateModel(
            name='UpdateProperty',
            fields=[
                ('listing_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='listing.listing')),
                ('orginal_post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='update_listing', to='listing.listing')),
            ],
            bases=('listing.listing',),
        ),
        migrations.CreateModel(
            name='PropertyAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField()),
                ('amenity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.amenitytype')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
            ],
            options={
                'verbose_name_plural': 'Property Amenities',
                'unique_together': {('listing', 'amenity_type')},
            },
        ),
    ]
